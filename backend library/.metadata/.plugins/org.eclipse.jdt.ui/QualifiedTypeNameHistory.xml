<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.Lob"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.example.bookList.bookDao.BookDao"/>
    <fullyQualifiedTypeName name="com.example.bookList.bookService.BookService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.example.bookList.model.Book"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="com.example.LogReg.model.UserAuth"/>
    <fullyQualifiedTypeName name="com.example.LogReg.exceptions.NullException"/>
    <fullyQualifiedTypeName name="javax.ws.rs.PUT"/>
    <fullyQualifiedTypeName name="com.example.LogReg.exceptions.UserNotFoundException"/>
    <fullyQualifiedTypeName name="com.example.LogReg.exceptions.PasswordMissmatchException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="javax.ws.rs.DELETE"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.example.bookList.exception.BookAlreadyExistException"/>
    <fullyQualifiedTypeName name="org.springframework.test.context.junit.jupiter.SpringExtension"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBeans"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoSettings"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.example.LogReg.dao.UsersDao"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
    <fullyQualifiedTypeName name="com.example.bookList.exception.BookNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.project.wishlist.service.WishlistServiceImp"/>
    <fullyQualifiedTypeName name="java.lang.BootstrapMethodError"/>
    <fullyQualifiedTypeName name="com.project.wishlist.exception.BookAlreadyExistsInFavException"/>
    <fullyQualifiedTypeName name="com.project.wishlist.model.Favourites"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.example.LogReg.model.ChangePassword"/>
    <fullyQualifiedTypeName name="org.assertj.core.api.junit.jupiter.InjectSoftAssertions"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="com.example.LogReg.model.Users"/>
    <fullyQualifiedTypeName name="com.example.LogReg.exceptions.EmailIdAlreadyExistException"/>
    <fullyQualifiedTypeName name="com.example.LogReg.exceptions.UserIdAlreadyExistException"/>
    <fullyQualifiedTypeName name="com.example.LogReg.service.UserService"/>
    <fullyQualifiedTypeName name="org.mockito.Mockito"/>
</qualifiedTypeNameHistroy>
